buildscript {
	ext {
		mainClassNameForDocker = 'com.jahnelgroup.AppKt'
		kotlinVersion = '1.2.71'
		springBootVersion = '2.1.2.RELEASE'
		gradleDockerVersion = '0.21.0'
		gradleDockerComposeVersion = '0.8.13'
	}
	repositories {
		mavenCentral()

		// gradle-docker
		maven {
			url "https://plugins.gradle.org/m2/"
		}

		// gradle-docker-compose-plugin
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:${gradleDockerVersion}")
		classpath("com.avast.gradle:gradle-docker-compose-plugin:${gradleDockerComposeVersion}")
		classpath("mysql:mysql-connector-java:8.0.15")
	}
}

plugins {
	id "org.flywaydb.flyway" version "5.2.4"
}

flyway {
    url = 'jdbc:mysql://127.0.0.1:3306/jg_starter'
    user = 'root'
	password = 'rootpassword'
	configFiles = ['flyway/dev.conf']
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'docker-compose'

group = 'com.jahnelgroup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

// spring-boot-devtools
// https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework:spring-context-support'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:+'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testCompile "com.h2database:h2:1.4.192"
	compile "org.flywaydb:flyway-core:5.2.4"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// Kotlin
// =========================
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

// Test
// =========================
test {
	systemProperty 'spring.profiles.active', 'test'
}

// AWS
// =========================

bootJar {
	archiveName = 'app.jar'
	from('ebextensions') {
		into '.ebextensions'
	}
}

// Docker
// =========================
// unpacking spring fat jar is faster in a docker container
task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency", 'MAIN_CLASS': mainClassNameForDocker])
}
// automatically run a build before containerizing the app
docker.dependsOn build

dockerCompose {
	full {
		useComposeFiles = ['docker-compose.yml', 'docker-compose.full.yml']
	}
	deps {
		useComposeFiles = ['docker-compose.yml']
	}
}
// automatically build the app's docker container before running compose with the app included
fullComposeUp.dependsOn  { tasks.dockerTag }